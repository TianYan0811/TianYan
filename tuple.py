
## 元组-tuple

	# 元组可看成是不可更改的list

	# 元组的特性

		# 是序列表，有序
		# 元组数据可以访问，但内容不能修改！
		# 元组数据可以是任意类型
		# 总之，list所有特性，除了修改，元组都具有
		# 索引、分片、序列相加、相乘、成员资格操作 与list一模一样

	# 元组的创建

		t = () 			# 创建空元组
		t = (1,)		# 注意区分: t = (1) 是int型
		t = 1,			# 同 t=(1,) 带逗号是元组
		t = (1,2,3) 	# 创建多个值的元组
		t = 1,2,3  		# 同 t=(1,2,3)

		L = [1,2,3]
		t = tuple(L)	# 其他方式创建

	# 索引操作

		t = (1,2,3,4,5)
		print(t[4])  	# 5

	# 分片操作

		t = (1,2,3,4,5,6)
		t1 = t[1:2]   	# 下标左闭右开
		print(t1)    	# (2)
		t2 = t[1::2]  	# 1~最后，步长为2
		print(t2)    	# (2,4,6)
		t3 = t[2:100] 	# 切片可以超标 

	# 序列相加

		t1 = (1,2,3)
		t2 = (4,5,6)

		# 允许传址操作
		print(t1)		# (1,2,3)
		print(id(t1))	# id
		t1 = t1 + t2   	# 不是修改，而是t1的指针指向新的元组
		print(t1)		# (1,2,3,4,5,6)
		print(id(t1))	# id 不一致

		# 以上操作类似于
		# t1 = (1,2,3)      
		# t2 = (4,5,6)       
		# t1 = (1,2,3,4,5,6) 
		# t1不是改变内容而是指针

		# tuple的不可修改指的是内容不能修改
		# 修改内容会报错
		# 比如 t1[1] = 100 会报错

		# 元组相乘
		t = (1,2,3)
		t = t * 3
		print(t)   		# (1,2,3,1,2,3,1,2,3)

		# 成员检测
		t = (1,2,3)
		if 2 in t:
			print("Yes")
		else:
			print("No") 
						# Yes

	# 元组遍历，一般用for

		# 1.单层元组遍历
		t = (1,2,3,"Y","i","X")
		for i in t:
			print(i,end=" ")
						# 1 2 3 Y i X

		# 2.双层元组遍历
		t = ((1,2,3),(2,3,4),("i","am","Man"))
		for i in t:
			print(i)
						# (1,2,3)
						# (2,3,4)
						# ("i","am","Man")

		for k,m,n in t: # 和list一样，每个第二层需要同样数量的元素
			print(k,"--",m,"--",n)
						# 1 -- 2 -- 3
						# 2 -- 3 -- 4
						# i -- am -- Man

	# 元组的函数

		# len: 获取元组的长度
		t =(1,2,3,4,5)
		len(t)          # 5

		# max,min: 最大值/最小值
		print(max(t))   # 5
		print(min(t))	# 1

		# tuple: 转化或创建元组
		l = [1,2,3,4,5]
		t = tuple(l)
		print(t) 		# (1,2,3,4,5)
		t = tuple()
		print(t) 		# ()

		# count: 计算指定数据出现次数
		t = (2,1,2,3,45,1,1,2,)
		print(t.count(2))  # 3

		# index: 求指定元素在元组中索引位置
		print(t.index(45)) # 4
		print(t.index(1))  # 1  有多个则返回第一个的位置

	# 元组变量交换法

		# 变量交换
		a = 1
		b = 3
		print(a)		# 1
		print(b)		# 3
		print("*" * 20) # 打印20个"*"
		a,b = b,a 		# 交换变量
		print(a)		# 3
		print(b)		# 1